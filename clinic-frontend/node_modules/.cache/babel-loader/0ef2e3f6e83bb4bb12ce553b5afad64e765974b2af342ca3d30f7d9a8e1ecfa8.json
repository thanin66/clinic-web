{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref('');\n    const password = ref('');\n    const errorMessage = ref('');\n    const loading = ref(false);\n    const submitLogin = async () => {\n      errorMessage.value = '';\n      if (!username.value || !password.value) {\n        errorMessage.value = 'Please enter username and password';\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.post('http://localhost:8000/login', {\n          username: username.value,\n          password: password.value\n        });\n        // handle login success (e.g. save token, redirect)\n        console.log('Login success:', response.data);\n      } catch (error) {\n        errorMessage.value = error.response?.data?.detail || 'Login failed';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      username,\n      password,\n      errorMessage,\n      loading,\n      submitLogin,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","username","password","errorMessage","loading","submitLogin","value","response","post","console","log","data","error","detail"],"sources":["D:/webapp/project/clinic-frontend/src/views/Login.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"fill-height\" fluid>\r\n        <v-row justify=\"center\" align=\"center\">\r\n            <v-col cols=\"12\" sm=\"8\" md=\"4\">\r\n                <v-card>\r\n                    <v-card-title class=\"text-h5\">Login</v-card-title>\r\n                    <v-card-text>\r\n                        <v-form @submit.prevent=\"submitLogin\">\r\n                            <v-text-field\r\n                                v-model=\"username\"\r\n                                label=\"Username\"\r\n                                required\r\n                            />\r\n                            <v-text-field\r\n                                v-model=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                required\r\n                            />\r\n                            <v-btn\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                :loading=\"loading\"\r\n                                class=\"mt-4\"\r\n                                block\r\n                            >\r\n                                Login\r\n                            </v-btn>\r\n                        </v-form>\r\n                    </v-card-text>\r\n                    <v-card-actions>\r\n                        <v-alert v-if=\"errorMessage\" type=\"error\" dense text>\r\n                            {{ errorMessage }}\r\n                        </v-alert>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst username = ref('')\r\nconst password = ref('')\r\nconst errorMessage = ref('')\r\nconst loading = ref(false)\r\n\r\nconst submitLogin = async () => {\r\n    errorMessage.value = ''\r\n    if (!username.value || !password.value) {\r\n        errorMessage.value = 'Please enter username and password'\r\n        return\r\n    }\r\n    loading.value = true\r\n    try {\r\n        const response = await axios.post('http://localhost:8000/login', {\r\n            username: username.value,\r\n            password: password.value,\r\n        })\r\n        // handle login success (e.g. save token, redirect)\r\n        console.log('Login success:', response.data)\r\n    } catch (error) {\r\n        errorMessage.value = error.response?.data?.detail || 'Login failed'\r\n    } finally {\r\n        loading.value = false\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"AA0CA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,QAAQ,GAAGF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,YAAY,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMK,OAAO,GAAGL,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5BF,YAAY,CAACG,KAAK,GAAG,EAAE;MACvB,IAAI,CAACL,QAAQ,CAACK,KAAK,IAAI,CAACJ,QAAQ,CAACI,KAAK,EAAE;QACpCH,YAAY,CAACG,KAAK,GAAG,oCAAoC;QACzD;MACJ;MACAF,OAAO,CAACE,KAAK,GAAG,IAAI;MACpB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,6BAA6B,EAAE;UAC7DP,QAAQ,EAAEA,QAAQ,CAACK,KAAK;UACxBJ,QAAQ,EAAEA,QAAQ,CAACI;QACvB,CAAC,CAAC;QACF;QACAG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZT,YAAY,CAACG,KAAK,GAAGM,KAAK,CAACL,QAAQ,EAAEI,IAAI,EAAEE,MAAM,IAAI,cAAc;MACvE,CAAC,SAAS;QACNT,OAAO,CAACE,KAAK,GAAG,KAAK;MACzB;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}