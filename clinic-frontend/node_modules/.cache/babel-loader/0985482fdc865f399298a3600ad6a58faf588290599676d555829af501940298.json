{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"RegisterPage\",\n  data() {\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      success: \"\"\n    };\n  },\n  methods: {\n    async register() {\n      this.error = \"\";\n      this.success = \"\";\n      try {\n        const response = await api.post(\"/register\", {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n        this.success = \"Registration successful! Please login.\";\n        // Optionally redirect to login page after success\n        setTimeout(() => this.$router.push(\"/login\"), 1500);\n      } catch (err) {\n        console.error(err);\n        this.error = err.response?.data?.detail || \"Registration failed.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","email","password","error","success","methods","register","response","post","setTimeout","$router","push","err","console","detail"],"sources":["D:\\webapp\\project\\clinic-frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <h1>Register</h1>\r\n    <form @submit.prevent=\"register\">\r\n      <input v-model=\"username\" type=\"text\" placeholder=\"Username\" required />\r\n      <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n    <p v-if=\"success\">{{ success }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"RegisterPage\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      success: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      this.error = \"\";\r\n      this.success = \"\";\r\n      try {\r\n        const response = await api.post(\"/register\", {\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n        this.success = \"Registration successful! Please login.\";\r\n        // Optionally redirect to login page after success\r\n        setTimeout(() => this.$router.push(\"/login\"), 1500);\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error = err.response?.data?.detail || \"Registration failed.\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAeA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAACH,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMV,GAAG,CAACW,IAAI,CAAC,WAAW,EAAE;UAC3CR,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAI,CAACE,OAAM,GAAI,wCAAwC;QACvD;QACAK,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MACrD,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACV,KAAK,CAACS,GAAG,CAAC;QAClB,IAAI,CAACT,KAAI,GAAIS,GAAG,CAACL,QAAQ,EAAER,IAAI,EAAEe,MAAK,IAAK,sBAAsB;MACnE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}