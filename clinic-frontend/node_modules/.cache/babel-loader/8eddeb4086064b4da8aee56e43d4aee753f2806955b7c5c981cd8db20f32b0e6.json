{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport router from '../router';\nexport default {\n  __name: 'DashboardPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const appointments = ref([]);\n    const newTitle = ref('');\n    const newDate = ref('');\n    const token = localStorage.getItem('token');\n    if (!token) router.push('/login');\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    const fetchAppointments = async () => {\n      const res = await axios.get('http://127.0.0.1:8000/appointments');\n      appointments.value = res.data;\n    };\n    const createAppointment = async () => {\n      const res = await axios.post('http://127.0.0.1:8000/appointments/', {\n        title: newTitle.value,\n        date: newDate.value\n      });\n      appointments.value.push(res.data);\n      newTitle.value = '';\n      newDate.value = '';\n    };\n    const deleteAppointment = async id => {\n      await axios.delete(`http://127.0.0.1:8000/appointments/${id}`);\n      appointments.value = appointments.value.filter(a => a.id !== id);\n    };\n    const logout = () => {\n      localStorage.removeItem('token');\n      router.push('/login');\n    };\n    onMounted(() => {\n      fetchAppointments();\n    });\n    const __returned__ = {\n      appointments,\n      newTitle,\n      newDate,\n      token,\n      fetchAppointments,\n      createAppointment,\n      deleteAppointment,\n      logout,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","router","appointments","newTitle","newDate","token","localStorage","getItem","push","defaults","headers","common","fetchAppointments","res","get","value","data","createAppointment","post","title","date","deleteAppointment","id","delete","filter","a","logout","removeItem"],"sources":["D:/webapp/project/clinic-frontend/src/views/DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Dashboard</h1>\r\n    <button @click=\"logout\">Logout</button>\r\n\r\n    <h2>Appointments</h2>\r\n    <ul>\r\n      <li v-for=\"appointment in appointments\" :key=\"appointment.id\">\r\n        {{ appointment.title }} - {{ appointment.date }}\r\n        <button @click=\"deleteAppointment(appointment.id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n    <form @submit.prevent=\"createAppointment\">\r\n      <input v-model=\"newTitle\" placeholder=\"Title\" required />\r\n      <input v-model=\"newDate\" type=\"date\" required />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport router from '../router'\r\n\r\nconst appointments = ref([])\r\nconst newTitle = ref('')\r\nconst newDate = ref('')\r\n\r\nconst token = localStorage.getItem('token')\r\n\r\nif (!token) router.push('/login')\r\n\r\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n\r\nconst fetchAppointments = async () => {\r\n  const res = await axios.get('http://127.0.0.1:8000/appointments')\r\n  appointments.value = res.data\r\n}\r\n\r\nconst createAppointment = async () => {\r\n  const res = await axios.post('http://127.0.0.1:8000/appointments/', {\r\n    title: newTitle.value,\r\n    date: newDate.value\r\n  })\r\n  appointments.value.push(res.data)\r\n  newTitle.value = ''\r\n  newDate.value = ''\r\n}\r\n\r\nconst deleteAppointment = async (id) => {\r\n  await axios.delete(`http://127.0.0.1:8000/appointments/${id}`)\r\n  appointments.value = appointments.value.filter(a => a.id !== id)\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('token')\r\n  router.push('/login')\r\n}\r\n\r\nonMounted(() => {\r\n  fetchAppointments()\r\n})\r\n</script>\r\n"],"mappings":";;;AAqBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;;;;;;;IAE9B,MAAMC,YAAY,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,OAAO,GAAGN,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAEJ,MAAM,CAACO,IAAI,CAAC,QAAQ,CAAC;IAEjCR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;IAElE,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,CAAC;MACjEZ,YAAY,CAACa,KAAK,GAAGF,GAAG,CAACG,IAAI;IAC/B,CAAC;IAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMJ,GAAG,GAAG,MAAMb,KAAK,CAACkB,IAAI,CAAC,qCAAqC,EAAE;QAClEC,KAAK,EAAEhB,QAAQ,CAACY,KAAK;QACrBK,IAAI,EAAEhB,OAAO,CAACW;MAChB,CAAC,CAAC;MACFb,YAAY,CAACa,KAAK,CAACP,IAAI,CAACK,GAAG,CAACG,IAAI,CAAC;MACjCb,QAAQ,CAACY,KAAK,GAAG,EAAE;MACnBX,OAAO,CAACW,KAAK,GAAG,EAAE;IACpB,CAAC;IAED,MAAMM,iBAAiB,GAAG,MAAOC,EAAE,IAAK;MACtC,MAAMtB,KAAK,CAACuB,MAAM,CAAC,sCAAsCD,EAAE,EAAE,CAAC;MAC9DpB,YAAY,CAACa,KAAK,GAAGb,YAAY,CAACa,KAAK,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;IAClE,CAAC;IAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;MACnBpB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;MAChC1B,MAAM,CAACO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEDT,SAAS,CAAC,MAAM;MACda,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}