{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Courses\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.courses, course => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: course.id\n    }, _toDisplayString(course.course_name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCourse = $event),\n    placeholder: \"New Course\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCourse]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addCourse && $options.addCourse(...args))\n  }, \"Add Course\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","courses","course","key","id","course_name","newCourse","$event","placeholder","onClick","_cache","args","$options","addCourse"],"sources":["D:\\webapp\\project\\clinic-frontend\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Courses</h2>\r\n    <ul>\r\n      <li v-for=\"course in courses\" :key=\"course.id\">{{ course.course_name }}</li>\r\n    </ul>\r\n    <input v-model=\"newCourse\" placeholder=\"New Course\" />\r\n    <button @click=\"addCourse\">Add Course</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      newCourse: ''\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchCourses();\r\n  },\r\n  methods: {\r\n    async fetchCourses() {\r\n      const token = localStorage.getItem('token');\r\n      const res = await axios.get('http://127.0.0.1:8000/courses', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      this.courses = res.data;\r\n    },\r\n    async addCourse() {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post('http://127.0.0.1:8000/courses', \r\n        { course_name: this.newCourse },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      this.newCourse = '';\r\n      await this.fetchCourses();\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAgB,YAAZ,SAAO,qBACXA,mBAAA,CAEK,c,kBADHD,mBAAA,CAA4EE,SAAA,QAAAC,WAAA,CAAvDC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBN,mBAAA,CAA4E;MAA7CO,GAAG,EAAED,MAAM,CAACE;wBAAOF,MAAM,CAACG,WAAW;oDAEtER,mBAAA,CAAsD;+DAAtCG,KAAA,CAAAM,SAAS,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAvBR,KAAA,CAAAM,SAAS,E,GACzBT,mBAAA,CAA8C;IAArCY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}