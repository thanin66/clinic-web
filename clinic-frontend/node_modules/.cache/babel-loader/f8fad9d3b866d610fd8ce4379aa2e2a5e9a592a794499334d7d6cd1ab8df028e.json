{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport router from '../router';\nexport default {\n  __name: 'RegisterPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const register = async () => {\n      try {\n        await axios.post('http://127.0.0.1:8000/users/', {\n          email: email.value,\n          password: password.value\n        });\n        router.push('/login');\n      } catch (err) {\n        error.value = 'Register failed';\n      }\n    };\n    const __returned__ = {\n      email,\n      password,\n      error,\n      register,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","router","email","password","error","register","post","value","push","err"],"sources":["D:/webapp/project/clinic-frontend/src/views/RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Register</h1>\r\n    <form @submit.prevent=\"register\">\r\n      <div>\r\n        <label>Email</label>\r\n        <input v-model=\"email\" type=\"email\" required />\r\n      </div>\r\n      <div>\r\n        <label>Password</label>\r\n        <input v-model=\"password\" type=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\nimport router from '../router'\r\n\r\nconst email = ref('')\r\nconst password = ref('')\r\nconst error = ref('')\r\n\r\nconst register = async () => {\r\n  try {\r\n    await axios.post('http://127.0.0.1:8000/users/', {\r\n      email: email.value,\r\n      password: password.value\r\n    })\r\n    router.push('/login')\r\n  } catch (err) {\r\n    error.value = 'Register failed'\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAmBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;;;;;;;IAE9B,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAML,KAAK,CAACM,IAAI,CAAC,8BAA8B,EAAE;UAC/CJ,KAAK,EAAEA,KAAK,CAACK,KAAK;UAClBJ,QAAQ,EAAEA,QAAQ,CAACI;QACrB,CAAC,CAAC;QACFN,MAAM,CAACO,IAAI,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,KAAK,CAACG,KAAK,GAAG,iBAAiB;MACjC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}