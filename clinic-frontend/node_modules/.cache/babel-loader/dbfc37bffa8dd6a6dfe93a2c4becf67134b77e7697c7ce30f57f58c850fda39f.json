{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Register\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.email = $event),\n    placeholder: \"Email\",\n    type: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event),\n    placeholder: \"Password\",\n    type: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"button\", {\n    onClick: $setup.register\n  }, \"Register\"), _createElementVNode(\"p\", null, _toDisplayString($setup.message), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$setup","username","$event","placeholder","email","type","password","onClick","register","_toDisplayString","message"],"sources":["D:\\webapp\\project\\clinic-frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst username = ref('')\r\nconst email = ref('')\r\nconst password = ref('')\r\nconst message = ref('')\r\n\r\nconst register = async () => {\r\n  try {\r\n    const response = await axios.post(\r\n      'http://127.0.0.1:8000/users/register',\r\n      {\r\n        username: username.value,\r\n        email: email.value,\r\n        password: password.value\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    )\r\n    message.value = 'Registration successful! User ID: ' + response.data.id\r\n  } catch (error) {\r\n    if (error.response) {\r\n      message.value = 'Registration failed: ' + error.response.data.detail\r\n    } else {\r\n      message.value = 'Registration failed: ' + error.message\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <h2>Register</h2>\r\n    <input v-model=\"username\" placeholder=\"Username\" />\r\n    <input v-model=\"email\" placeholder=\"Email\" type=\"email\" />\r\n    <input v-model=\"password\" placeholder=\"Password\" type=\"password\" />\r\n    <button @click=\"register\">Register</button>\r\n    <p>{{ message }}</p>\r\n  </div>\r\n</template>\r\n"],"mappings":";;uBAoCEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAiB,YAAb,UAAQ,qB,gBACZA,mBAAA,CAAmD;+DAAnCC,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,mBACxBF,mBAAA,CAA0D;+DAA1CC,MAAA,CAAAI,KAAK,GAAAF,MAAA;IAAEC,WAAW,EAAC,OAAO;IAACE,IAAI,EAAC;iDAAhCL,MAAA,CAAAI,KAAK,E,mBACrBL,mBAAA,CAAmE;+DAAnDC,MAAA,CAAAM,QAAQ,GAAAJ,MAAA;IAAEC,WAAW,EAAC,UAAU;IAACE,IAAI,EAAC;iDAAtCL,MAAA,CAAAM,QAAQ,E,GACxBP,mBAAA,CAA2C;IAAlCQ,OAAK,EAAEP,MAAA,CAAAQ;EAAQ,GAAE,UAAQ,GAClCT,mBAAA,CAAoB,WAAAU,gBAAA,CAAdT,MAAA,CAAAU,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}