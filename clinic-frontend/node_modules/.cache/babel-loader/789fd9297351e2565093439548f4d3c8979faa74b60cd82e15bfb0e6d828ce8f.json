{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Register\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"button\", {\n    onClick: $setup.register\n  }, \"Register\"), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($setup.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$setup","username","$event","placeholder","email","password","type","onClick","register","error","_hoisted_1","_toDisplayString","success","_hoisted_2"],"sources":["D:\\webapp\\project\\clinic-frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Register</h2>\r\n    <input v-model=\"username\" placeholder=\"Username\" />\r\n    <input v-model=\"email\" placeholder=\"Email\" />\r\n    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n    <button @click=\"register\">Register</button>\r\n    <p v-if=\"error\">{{ error }}</p>\r\n    <p v-if=\"success\">{{ success }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst username = ref(\"\");\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst error = ref(\"\");\r\nconst success = ref(\"\");\r\n\r\nconst register = async () => {\r\n  try {\r\n    const response = await axios.post(\"http://localhost:8000/users/register\", {\r\n      username: username.value,\r\n      email: email.value,\r\n      password: password.value\r\n    });\r\n    success.value = \"Registration successful!\";\r\n    error.value = \"\";\r\n  } catch (err) {\r\n    error.value = err.response?.data?.detail || \"Registration failed\";\r\n    success.value = \"\";\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;uBACEA,mBAAA,CAQM,c,0BAPJC,mBAAA,CAAiB,YAAb,UAAQ,qB,gBACZA,mBAAA,CAAmD;+DAAnCC,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,mBACxBF,mBAAA,CAA6C;+DAA7BC,MAAA,CAAAI,KAAK,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAAnBH,MAAA,CAAAI,KAAK,E,mBACrBL,mBAAA,CAAmE;+DAAnDC,MAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEI,IAAI,EAAC,UAAU;IAACH,WAAW,EAAC;iDAAtCH,MAAA,CAAAK,QAAQ,E,GACxBN,mBAAA,CAA2C;IAAlCQ,OAAK,EAAEP,MAAA,CAAAQ;EAAQ,GAAE,UAAQ,GACzBR,MAAA,CAAAS,KAAK,I,cAAdX,mBAAA,CAA+B,KAAAY,UAAA,EAAAC,gBAAA,CAAZX,MAAA,CAAAS,KAAK,oB,mCACfT,MAAA,CAAAY,OAAO,I,cAAhBd,mBAAA,CAAmC,KAAAe,UAAA,EAAAF,gBAAA,CAAdX,MAAA,CAAAY,OAAO,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}