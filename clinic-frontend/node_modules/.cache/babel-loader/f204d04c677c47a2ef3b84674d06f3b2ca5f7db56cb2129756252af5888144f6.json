{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"green\"\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Register\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    type: \"email\",\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.register && _ctx.register(...args))\n  }, \"Register\"), _ctx.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString(_ctx.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Registration successful! Please login.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","_ctx","email","$event","type","placeholder","password","onClick","_cache","args","register","error","_hoisted_1","_toDisplayString","success","_hoisted_2"],"sources":["D:\\webapp\\project\\clinic-frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Register</h2>\r\n    <input v-model=\"email\" type=\"email\" placeholder=\"Email\" />\r\n    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n    <button @click=\"register\">Register</button>\r\n    <p v-if=\"error\" style=\"color:red\">{{ error }}</p>\r\n    <p v-if=\"success\" style=\"color:green\">Registration successful! Please login.</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst email = ref(\"\");\r\nconst password = ref(\"\");\r\nconst error = ref(\"\");\r\nconst success = ref(false);\r\n\r\nasync function register() {\r\n  try {\r\n    await axios.post(\"http://localhost:8000/users/register\", {\r\n\r\n</script>\r\n"],"mappings":";;;EAMoBA,KAAiB,EAAjB;IAAA;EAAA;;;;EACEA,KAAmB,EAAnB;IAAA;EAAA;;;uBANpBC,mBAAA,CAOM,c,0BANJC,mBAAA,CAAiB,YAAb,UAAQ,qB,gBACZA,mBAAA,CAA0D;+DAA1CC,IAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC;iDAAhCJ,IAAA,CAAAC,KAAK,E,mBACrBF,mBAAA,CAAmE;+DAAnDC,IAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC;iDAAtCJ,IAAA,CAAAK,QAAQ,E,GACxBN,mBAAA,CAA2C;IAAlCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,IAAA,CAAAS,QAAA,IAAAT,IAAA,CAAAS,QAAA,IAAAD,IAAA,CAAQ;KAAE,UAAQ,GACzBR,IAAA,CAAAU,KAAK,I,cAAdZ,mBAAA,CAAiD,KAAjDa,UAAiD,EAAAC,gBAAA,CAAZZ,IAAA,CAAAU,KAAK,oB,mCACjCV,IAAA,CAAAa,OAAO,I,cAAhBf,mBAAA,CAAgF,KAAhFgB,UAAgF,EAA1C,wCAAsC,K","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}